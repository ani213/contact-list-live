{"ast":null,"code":"import _objectSpread from \"/home/aniket/Desktop/New_Projects/contact_list/contact_list/node_modules/@babel/runtime/helpers/esm/objectSpread2\";\nexport const initialState = {\n  contacts: [],\n  addContactYN: false,\n  error: \"\"\n};\nexport const SET_CONTACTS = \"SET_CONTACTS\";\nexport const HANDLE_ADD_CONTACT_FORM = \"HANDLE_ADD_CONTACT_FORM\";\nexport const ADD_CONTACT = \"ADD_CONTACT\";\nexport const setContacts = contacts => dispatch => {\n  dispatch({\n    type: SET_CONTACTS,\n    payload: contacts\n  });\n};\nexport const handleAddContactForm = showOrHide => dispatch => {\n  dispatch({\n    type: HANDLE_ADD_CONTACT_FORM,\n    payload: showOrHide\n  });\n};\nexport const addContact = contactDetails => dispatch => {\n  dispatch({\n    type: ADD_CONTACT,\n    payload: contactDetails\n  });\n};\nexport const _validateDetail = (arr, details) => {\n  return new Promise((resolve, reject) => {\n    arr.forEach(element => {\n      console.log(element, \"element\");\n\n      if (!details[element]) {\n        console.log(!details.element);\n        resolve(element);\n      }\n    });\n    resolve(\"AllOk\");\n  });\n};\nexport default function contactReducer(state = initialState, {\n  type,\n  payload\n}) {\n  switch (type) {\n    case SET_CONTACTS:\n      return _objectSpread({}, state, {\n        contacts: payload\n      });\n\n    case HANDLE_ADD_CONTACT_FORM:\n      return _objectSpread({}, state, {\n        addContactYN: payload\n      });\n\n    case ADD_CONTACT:\n      let oldContacts = state.contacts;\n      console.log(payload);\n      var allOk = true;\n      let arr = [\"firstName\", \"lastName\", \"email\", \"phone\"];\n\n      _validateDetail(arr, payload).then(data => {\n        console.log(\"data\", data);\n\n        if (data == \"AllOk\") {\n          let details = {\n            id: oldContacts.length + 1,\n            first_name: payload.firstName,\n            last_name: payload.lastName,\n            email: payload.email,\n            avatar_url: \"https://robohash.org/quasimagnilaudantium.png?size=100x100&set=set1\",\n            phone: payload.phone\n          };\n          oldContacts.push(details);\n          localStorage.setItem(\"contact\", JSON.stringify(oldContacts));\n          return _objectSpread({}, state, {\n            contacts: oldContacts\n          });\n        } else {\n          return _objectSpread({}, state, {\n            error: `${data} is missing`\n          });\n        }\n      });\n\n    default:\n      return state;\n  }\n}","map":{"version":3,"sources":["/home/aniket/Desktop/New_Projects/contact_list/contact_list/src/Component/contactState.js"],"names":["initialState","contacts","addContactYN","error","SET_CONTACTS","HANDLE_ADD_CONTACT_FORM","ADD_CONTACT","setContacts","dispatch","type","payload","handleAddContactForm","showOrHide","addContact","contactDetails","_validateDetail","arr","details","Promise","resolve","reject","forEach","element","console","log","contactReducer","state","oldContacts","allOk","then","data","id","length","first_name","firstName","last_name","lastName","email","avatar_url","phone","push","localStorage","setItem","JSON","stringify"],"mappings":"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","sourcesContent":["\nexport const initialState={\n     contacts:[],\n     addContactYN:false,\n     error:\"\"\n     \n}\nexport const SET_CONTACTS=\"SET_CONTACTS\";\nexport const HANDLE_ADD_CONTACT_FORM=\"HANDLE_ADD_CONTACT_FORM\";\nexport const ADD_CONTACT=\"ADD_CONTACT\";\nexport const setContacts=(contacts)=>dispatch=>{\ndispatch({\n    type:SET_CONTACTS,\n    payload:contacts\n})\n}\nexport const handleAddContactForm=(showOrHide)=>dispatch=>{\ndispatch({\n    type:HANDLE_ADD_CONTACT_FORM,\n    payload:showOrHide\n})\n}\nexport const addContact=(contactDetails)=>dispatch=>{\n    dispatch({\n        type:ADD_CONTACT,\n        payload:contactDetails\n    })\n}\n\nexport const _validateDetail=(arr,details)=>{\n  return new Promise((resolve,reject)=>{\n         \n        arr.forEach(element => {\n            console.log(element,\"element\")\n           if(!details[element]){\n               console.log(!details.element)\n               resolve(element)\n            \n           } \n        });\n       resolve(\"AllOk\");\n  })\n\n}\n\n\nexport default function contactReducer(state=initialState,{type,payload}){\n    switch(type){\n        case SET_CONTACTS:\n            return{\n                ...state,\n                contacts:payload\n            }\n        case HANDLE_ADD_CONTACT_FORM:\n            return{\n                ...state,\n                addContactYN:payload\n            }  \n        case ADD_CONTACT:\n            let oldContacts=state.contacts;\n             console.log(payload)\n            var allOk=true;\n             let arr=[\"firstName\",\"lastName\",\"email\",\"phone\"];\n             _validateDetail(arr,payload).then((data)=>{\n                 console.log(\"data\",data)\n                 if(data==\"AllOk\"){\n                    let details={\n                        id:oldContacts.length+1,\n                        first_name:payload.firstName,\n                        last_name:payload.lastName,\n                        email:payload.email,\n                        avatar_url:\"https://robohash.org/quasimagnilaudantium.png?size=100x100&set=set1\",\n                        phone:payload.phone,\n                    } \n                    oldContacts.push(details);\n                   localStorage.setItem(\"contact\", JSON.stringify(oldContacts)) \n                   return{\n                       ...state,\n                       contacts:oldContacts\n                   }\n                } \n                   else{\n                       return{\n                           ...state,\n                           error:`${data} is missing`\n                       }\n                   }\n             })\n                  \n        default:\n            return state\n    }\n\n}"]},"metadata":{},"sourceType":"module"}