{"ast":null,"code":"import _objectSpread from \"/home/aniket/Desktop/New_Projects/contact_list/contact_list/node_modules/@babel/runtime/helpers/esm/objectSpread2\";\nexport const initialState = {\n  contacts: [],\n  addContactYN: false,\n  error: \"\",\n  success: false,\n  editContact: {\n    id: \"\",\n    YN: false\n  },\n  editDetails: null\n};\nexport const SET_CONTACTS = \"SET_CONTACTS\";\nexport const HANDLE_ADD_CONTACT_FORM = \"HANDLE_ADD_CONTACT_FORM\";\nexport const ADD_CONTACT = \"ADD_CONTACT\";\nexport const CLEAR_ERROR = \"CLEAR_ERROR\";\nexport const DELETE_CONTACT = 'DELETE_CONTACT';\nexport const CLEAR_SUCCESS = 'CLEAR_SUCCESS';\nexport const SHOW_EDIT_FORM = \"SHOW_EDIT_FORM\";\nexport const EDIT_DETAILS_CHANGE = \"EDIT_DETAILS_CHANGE\";\nexport const setContacts = contacts => dispatch => {\n  dispatch({\n    type: SET_CONTACTS,\n    payload: contacts\n  });\n};\nexport const handleAddContactForm = showOrHide => dispatch => {\n  dispatch({\n    type: HANDLE_ADD_CONTACT_FORM,\n    payload: showOrHide\n  });\n};\nexport const addContact = contactDetails => dispatch => {\n  dispatch({\n    type: ADD_CONTACT,\n    payload: contactDetails\n  });\n};\nexport const clearError = () => dispatch => {\n  dispatch({\n    type: CLEAR_ERROR\n  });\n};\nexport const clearSuccess = () => dispatch => {\n  dispatch({\n    type: CLEAR_SUCCESS\n  });\n};\nexport const deleteContact = id => dispatch => {\n  dispatch({\n    type: DELETE_CONTACT,\n    payload: id\n  });\n};\nexport const showEditForm = data => dispatch => {\n  dispatch({\n    type: SHOW_EDIT_FORM,\n    payload: data\n  });\n};\nexport const editDetailsChange = (name, value) => dispatch => {\n  dispatch({\n    type: EDIT_DETAILS_CHANGE,\n    payload: {\n      name: name,\n      value: value\n    }\n  });\n};\nexport const _validateDetail = (arr, details) => {\n  for (let i = 0; i < arr.length; i++) {\n    if (!details[arr[i]]) {\n      return arr[i];\n    }\n  }\n\n  return \"ALLOK\";\n};\nexport default function contactReducer(state = initialState, {\n  type,\n  payload\n}) {\n  switch (type) {\n    case SET_CONTACTS:\n      return _objectSpread({}, state, {\n        contacts: payload\n      });\n\n    case HANDLE_ADD_CONTACT_FORM:\n      return _objectSpread({}, state, {\n        addContactYN: payload\n      });\n\n    case ADD_CONTACT:\n      let oldContacts = state.contacts; //  console.log(payload)\n\n      let arr = [\"firstName\", \"lastName\", \"email\", \"phone\"];\n\n      let data = _validateDetail(arr, payload);\n\n      console.log(data, \"data\");\n\n      if (data == \"ALLOK\") {\n        let details = {\n          id: oldContacts[oldContacts.length - 1].id + 1,\n          first_name: payload.firstName,\n          last_name: payload.lastName,\n          email: payload.email,\n          avatar_url: \"https://robohash.org/quasimagnilaudantium.png?size=100x100&set=set1\",\n          phone: payload.phone\n        };\n        oldContacts.push(details); // console.log(oldContacts)\n\n        localStorage.setItem(\"contact\", JSON.stringify(oldContacts));\n        return _objectSpread({}, state, {\n          contacts: oldContacts,\n          success: true\n        });\n      } else {\n        return _objectSpread({}, state, {\n          error: `${data} is required but missing`\n        });\n      }\n\n    case DELETE_CONTACT:\n      let newContact = state.contacts.filter(ele => {\n        if (ele.id != payload) {\n          return ele;\n        }\n      });\n      localStorage.setItem(\"contact\", JSON.stringify(newContact));\n      return _objectSpread({}, state, {\n        contacts: newContact\n      });\n\n    case CLEAR_ERROR:\n      return _objectSpread({}, state, {\n        error: \"\"\n      });\n\n    case CLEAR_SUCCESS:\n      return _objectSpread({}, state, {\n        success: false\n      });\n\n    case SHOW_EDIT_FORM:\n      // console.log(\"payload\",payload)\n      return _objectSpread({}, state, {\n        editContact: {\n          id: payload.id,\n          YN: payload.YN\n        },\n        editDetails: payload\n      });\n\n    case EDIT_DETAILS_CHANGE:\n      return _objectSpread({}, state, {\n        editDetails: _objectSpread({}, state.editDetails, {\n          [payload.name]: payload.value\n        })\n      });\n\n    default:\n      return state;\n  }\n}","map":{"version":3,"sources":["/home/aniket/Desktop/New_Projects/contact_list/contact_list/src/Component/contactState.js"],"names":["initialState","contacts","addContactYN","error","success","editContact","id","YN","editDetails","SET_CONTACTS","HANDLE_ADD_CONTACT_FORM","ADD_CONTACT","CLEAR_ERROR","DELETE_CONTACT","CLEAR_SUCCESS","SHOW_EDIT_FORM","EDIT_DETAILS_CHANGE","setContacts","dispatch","type","payload","handleAddContactForm","showOrHide","addContact","contactDetails","clearError","clearSuccess","deleteContact","showEditForm","data","editDetailsChange","name","value","_validateDetail","arr","details","i","length","contactReducer","state","oldContacts","console","log","first_name","firstName","last_name","lastName","email","avatar_url","phone","push","localStorage","setItem","JSON","stringify","newContact","filter","ele"],"mappings":"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","sourcesContent":["\nexport const initialState={\n     contacts:[],\n     addContactYN:false,\n     error:\"\",\n     success:false,\n     editContact:{id:\"\",YN:false},\n     editDetails:null\n}\nexport const SET_CONTACTS=\"SET_CONTACTS\";\nexport const HANDLE_ADD_CONTACT_FORM=\"HANDLE_ADD_CONTACT_FORM\";\nexport const ADD_CONTACT=\"ADD_CONTACT\";\nexport const CLEAR_ERROR=\"CLEAR_ERROR\";\nexport const DELETE_CONTACT='DELETE_CONTACT';\nexport const CLEAR_SUCCESS='CLEAR_SUCCESS';\nexport const SHOW_EDIT_FORM=\"SHOW_EDIT_FORM\";\nexport const EDIT_DETAILS_CHANGE=\"EDIT_DETAILS_CHANGE\"\n\nexport const setContacts=(contacts)=>dispatch=>{\ndispatch({\n    type:SET_CONTACTS,\n    payload:contacts\n})\n}\nexport const handleAddContactForm=(showOrHide)=>dispatch=>{\ndispatch({\n    type:HANDLE_ADD_CONTACT_FORM,\n    payload:showOrHide\n})\n}\nexport const addContact=(contactDetails)=>dispatch=>{\n    dispatch({\n        type:ADD_CONTACT,\n        payload:contactDetails\n    })\n}\nexport const clearError=()=>dispatch=>{\n    dispatch({\n        type:CLEAR_ERROR\n    })\n}\nexport const clearSuccess=()=>dispatch=>{\n    dispatch({\n        type:CLEAR_SUCCESS\n    })\n}\nexport const deleteContact=(id)=>dispatch=>{\ndispatch({\n    type:DELETE_CONTACT,\n    payload:id,\n})\n}\nexport const showEditForm=(data)=>dispatch=>{\n    dispatch({\n        type:SHOW_EDIT_FORM,\n        payload:data,\n    })\n}\nexport const editDetailsChange=(name,value)=>dispatch=>{\ndispatch({\n        type:EDIT_DETAILS_CHANGE,\n        payload:{name:name,value:value}\n})\n}\n\n\n\nexport const _validateDetail=(arr,details)=>{\n         for(let i=0;i<arr.length;i++){\n             if(!details[arr[i]]){\n                 return arr[i];\n             }\n         }\n         return \"ALLOK\"\n}\n\n\nexport default function contactReducer(state=initialState,{type,payload}){\n    switch(type){\n        case SET_CONTACTS:\n            return{\n                ...state,\n                contacts:payload\n            }\n        case HANDLE_ADD_CONTACT_FORM:\n            return{\n                ...state,\n                addContactYN:payload\n            }  \n        case ADD_CONTACT:\n            let oldContacts=state.contacts;\n            //  console.log(payload)\n             let arr=[\"firstName\",\"lastName\",\"email\",\"phone\"];\n            let data= _validateDetail(arr,payload)\n            console.log(data,\"data\")\n                 if(data==\"ALLOK\"){\n                    let details={\n                        id:oldContacts[oldContacts.length-1].id+1,\n                        first_name:payload.firstName,\n                        last_name:payload.lastName,\n                        email:payload.email,\n                        avatar_url:\"https://robohash.org/quasimagnilaudantium.png?size=100x100&set=set1\",\n                        phone:payload.phone,\n                    } \n                    oldContacts.push(details);\n                    // console.log(oldContacts)\n                   localStorage.setItem(\"contact\", JSON.stringify(oldContacts))\n                   return{\n                       ...state,\n                       contacts:oldContacts,\n                       success:true,\n                   }\n                } \n                   else{\n                       return{\n                           ...state,\n                           error:`${data} is required but missing`\n                       }\n                   }     \n         \n        case DELETE_CONTACT:\n            let newContact=state.contacts.filter((ele)=>{\n                if(ele.id!=payload)\n                {\n                    return ele;\n                }\n            }) \n            localStorage.setItem(\"contact\", JSON.stringify(newContact))\n            return{\n                ...state,\n                contacts:newContact\n            }\n        case CLEAR_ERROR:\n            return{\n                ...state,\n                error:\"\"\n            }    \n        case CLEAR_SUCCESS:\n            return{\n                ...state,\n                success:false\n            }\n        case SHOW_EDIT_FORM:\n            // console.log(\"payload\",payload)\n            return{\n                ...state,\n                editContact:{id:payload.id,YN:payload.YN},\n                editDetails:payload\n            } \n        case EDIT_DETAILS_CHANGE:\n           return {\n              ...state,\n              editDetails:{...state.editDetails,[payload.name]:payload.value}\n            }       \n        default:\n            return state\n    }\n\n}"]},"metadata":{},"sourceType":"module"}