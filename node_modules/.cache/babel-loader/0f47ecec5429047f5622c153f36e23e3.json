{"ast":null,"code":"import _objectSpread from \"/home/aniket/Desktop/New_Projects/contact_list/contact_list/node_modules/@babel/runtime/helpers/esm/objectSpread2\";\nexport const initialState = {\n  contacts: [],\n  addContactYN: false,\n  error: \"\"\n};\nexport const SET_CONTACTS = \"SET_CONTACTS\";\nexport const HANDLE_ADD_CONTACT_FORM = \"HANDLE_ADD_CONTACT_FORM\";\nexport const ADD_CONTACT = \"ADD_CONTACT\";\nexport const setContacts = contacts => dispatch => {\n  dispatch({\n    type: SET_CONTACTS,\n    payload: contacts\n  });\n};\nexport const handleAddContactForm = showOrHide => dispatch => {\n  dispatch({\n    type: HANDLE_ADD_CONTACT_FORM,\n    payload: showOrHide\n  });\n};\nexport const addContact = contactDetails => dispatch => {\n  dispatch({\n    type: ADD_CONTACT,\n    payload: contactDetails\n  });\n};\nexport const _validateDetail = (arr, details) => {\n  return new Promise((resolve, reject) => {\n    arr.forEach(element => {\n      if (!details.element) {\n        resolve(element);\n      }\n    });\n    resolve(\"AllOk\");\n  });\n};\nexport default function contactReducer(state = initialState, {\n  type,\n  payload\n}) {\n  switch (type) {\n    case SET_CONTACTS:\n      return _objectSpread({}, state, {\n        contacts: payload\n      });\n\n    case HANDLE_ADD_CONTACT_FORM:\n      return _objectSpread({}, state, {\n        addContactYN: payload\n      });\n\n    case ADD_CONTACT:\n      let oldContacts = state.contacts;\n      console.log(payload);\n      var allOk = true;\n      let arr = [\"firstName\", \"lastName\", \"email\", \"phone\"];\n\n      _validateDetail(arr, payload).then(data => {\n        console.log(data);\n      });\n\n      if (allOk) {\n        let details = {\n          id: oldContacts.length + 1,\n          first_name: payload.firstName,\n          last_name: payload.lastName,\n          email: payload.email,\n          avatar_url: \"https://robohash.org/quasimagnilaudantium.png?size=100x100&set=set1\",\n          phone: payload.phone\n        };\n        oldContacts.push(details);\n        localStorage.setItem(\"contact\", JSON.stringify(oldContacts));\n        return _objectSpread({}, state, {\n          contacts: oldContacts\n        });\n      }\n\n    default:\n      return state;\n  }\n}","map":{"version":3,"sources":["/home/aniket/Desktop/New_Projects/contact_list/contact_list/src/Component/contactState.js"],"names":["initialState","contacts","addContactYN","error","SET_CONTACTS","HANDLE_ADD_CONTACT_FORM","ADD_CONTACT","setContacts","dispatch","type","payload","handleAddContactForm","showOrHide","addContact","contactDetails","_validateDetail","arr","details","Promise","resolve","reject","forEach","element","contactReducer","state","oldContacts","console","log","allOk","then","data","id","length","first_name","firstName","last_name","lastName","email","avatar_url","phone","push","localStorage","setItem","JSON","stringify"],"mappings":"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","sourcesContent":["\nexport const initialState={\n     contacts:[],\n     addContactYN:false,\n     error:\"\"\n     \n}\nexport const SET_CONTACTS=\"SET_CONTACTS\";\nexport const HANDLE_ADD_CONTACT_FORM=\"HANDLE_ADD_CONTACT_FORM\";\nexport const ADD_CONTACT=\"ADD_CONTACT\";\nexport const setContacts=(contacts)=>dispatch=>{\ndispatch({\n    type:SET_CONTACTS,\n    payload:contacts\n})\n}\nexport const handleAddContactForm=(showOrHide)=>dispatch=>{\ndispatch({\n    type:HANDLE_ADD_CONTACT_FORM,\n    payload:showOrHide\n})\n}\nexport const addContact=(contactDetails)=>dispatch=>{\n    dispatch({\n        type:ADD_CONTACT,\n        payload:contactDetails\n    })\n}\n\nexport const _validateDetail=(arr,details)=>{\n  return new Promise((resolve,reject)=>{\n         \n        arr.forEach(element => {\n           if(!details.element){\n               resolve(element)\n           } \n        });\n       resolve(\"AllOk\");\n  })\n\n}\n\n\nexport default function contactReducer(state=initialState,{type,payload}){\n    switch(type){\n        case SET_CONTACTS:\n            return{\n                ...state,\n                contacts:payload\n            }\n        case HANDLE_ADD_CONTACT_FORM:\n            return{\n                ...state,\n                addContactYN:payload\n            }  \n        case ADD_CONTACT:\n            let oldContacts=state.contacts;\n             console.log(payload)\n            var allOk=true;\n             let arr=[\"firstName\",\"lastName\",\"email\",\"phone\"];\n             _validateDetail(arr,payload).then((data)=>{\n                 console.log(data)\n             })\n             if(allOk){\n            let details={\n                id:oldContacts.length+1,\n                first_name:payload.firstName,\n                last_name:payload.lastName,\n                email:payload.email,\n                avatar_url:\"https://robohash.org/quasimagnilaudantium.png?size=100x100&set=set1\",\n                phone:payload.phone,\n            } \n            oldContacts.push(details);\n           localStorage.setItem(\"contact\", JSON.stringify(oldContacts)) \n           return{\n               ...state,\n               contacts:oldContacts\n           }}      \n        default:\n            return state\n    }\n\n}"]},"metadata":{},"sourceType":"module"}