{"ast":null,"code":"import _objectSpread from \"/home/aniket/Desktop/New_Projects/contact_list/contact_list/node_modules/@babel/runtime/helpers/esm/objectSpread2\";\nexport const initialState = {\n  contacts: [],\n  addContactYN: false,\n  error: \"\",\n  success: false,\n  editContact: {\n    id: \"\",\n    YN: false\n  }\n};\nexport const SET_CONTACTS = \"SET_CONTACTS\";\nexport const HANDLE_ADD_CONTACT_FORM = \"HANDLE_ADD_CONTACT_FORM\";\nexport const ADD_CONTACT = \"ADD_CONTACT\";\nexport const CLEAR_ERROR = \"CLEAR_ERROR\";\nexport const DELETE_CONTACT = 'DELETE_CONTACT';\nexport const CLEAR_SUCCESS = 'CLEAR_SUCCESS';\nexport const setContacts = contacts => dispatch => {\n  dispatch({\n    type: SET_CONTACTS,\n    payload: contacts\n  });\n};\nexport const handleAddContactForm = showOrHide => dispatch => {\n  dispatch({\n    type: HANDLE_ADD_CONTACT_FORM,\n    payload: showOrHide\n  });\n};\nexport const addContact = contactDetails => dispatch => {\n  dispatch({\n    type: ADD_CONTACT,\n    payload: contactDetails\n  });\n};\nexport const clearError = () => dispatch => {\n  dispatch({\n    type: CLEAR_ERROR\n  });\n};\nexport const clearSuccess = () => dispatch => {\n  dispatch({\n    type: CLEAR_SUCCESS\n  });\n};\nexport const deleteContact = id => dispatch => {\n  dispatch({\n    type: DELETE_CONTACT,\n    payload: id\n  });\n};\nexport const _validateDetail = (arr, details) => {\n  for (let i = 0; i < arr.length; i++) {\n    if (!details[arr[i]]) {\n      return arr[i];\n    }\n  }\n\n  return \"ALLOK\";\n};\nexport default function contactReducer(state = initialState, {\n  type,\n  payload\n}) {\n  switch (type) {\n    case SET_CONTACTS:\n      return _objectSpread({}, state, {\n        contacts: payload\n      });\n\n    case HANDLE_ADD_CONTACT_FORM:\n      return _objectSpread({}, state, {\n        addContactYN: payload\n      });\n\n    case ADD_CONTACT:\n      let oldContacts = state.contacts; //  console.log(payload)\n\n      let arr = [\"firstName\", \"lastName\", \"email\", \"phone\"];\n\n      let data = _validateDetail(arr, payload);\n\n      console.log(data, \"data\");\n\n      if (data == \"ALLOK\") {\n        let details = {\n          id: oldContacts[oldContacts.length - 1].id + 1,\n          first_name: payload.firstName,\n          last_name: payload.lastName,\n          email: payload.email,\n          avatar_url: \"https://robohash.org/quasimagnilaudantium.png?size=100x100&set=set1\",\n          phone: payload.phone\n        };\n        oldContacts.push(details); // console.log(oldContacts)\n\n        localStorage.setItem(\"contact\", JSON.stringify(oldContacts));\n        return _objectSpread({}, state, {\n          contacts: oldContacts,\n          success: true\n        });\n      } else {\n        return _objectSpread({}, state, {\n          error: `${data} is required but missing`\n        });\n      }\n\n    case DELETE_CONTACT:\n      let newContact = state.contacts.filter(ele => {\n        if (ele.id != payload) {\n          return ele;\n        }\n      });\n      localStorage.setItem(\"contact\", JSON.stringify(newContact));\n      return _objectSpread({}, state, {\n        contacts: newContact\n      });\n\n    case CLEAR_ERROR:\n      return _objectSpread({}, state, {\n        error: \"\"\n      });\n\n    case CLEAR_SUCCESS:\n      return _objectSpread({}, state, {\n        success: false\n      });\n\n    default:\n      return state;\n  }\n}","map":{"version":3,"sources":["/home/aniket/Desktop/New_Projects/contact_list/contact_list/src/Component/contactState.js"],"names":["initialState","contacts","addContactYN","error","success","editContact","id","YN","SET_CONTACTS","HANDLE_ADD_CONTACT_FORM","ADD_CONTACT","CLEAR_ERROR","DELETE_CONTACT","CLEAR_SUCCESS","setContacts","dispatch","type","payload","handleAddContactForm","showOrHide","addContact","contactDetails","clearError","clearSuccess","deleteContact","_validateDetail","arr","details","i","length","contactReducer","state","oldContacts","data","console","log","first_name","firstName","last_name","lastName","email","avatar_url","phone","push","localStorage","setItem","JSON","stringify","newContact","filter","ele"],"mappings":"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","sourcesContent":["\nexport const initialState={\n     contacts:[],\n     addContactYN:false,\n     error:\"\",\n     success:false,\n     editContact:{id:\"\",YN:false}\n}\nexport const SET_CONTACTS=\"SET_CONTACTS\";\nexport const HANDLE_ADD_CONTACT_FORM=\"HANDLE_ADD_CONTACT_FORM\";\nexport const ADD_CONTACT=\"ADD_CONTACT\";\nexport const CLEAR_ERROR=\"CLEAR_ERROR\";\nexport const DELETE_CONTACT='DELETE_CONTACT';\nexport const CLEAR_SUCCESS='CLEAR_SUCCESS';\n\nexport const setContacts=(contacts)=>dispatch=>{\ndispatch({\n    type:SET_CONTACTS,\n    payload:contacts\n})\n}\nexport const handleAddContactForm=(showOrHide)=>dispatch=>{\ndispatch({\n    type:HANDLE_ADD_CONTACT_FORM,\n    payload:showOrHide\n})\n}\nexport const addContact=(contactDetails)=>dispatch=>{\n    dispatch({\n        type:ADD_CONTACT,\n        payload:contactDetails\n    })\n}\nexport const clearError=()=>dispatch=>{\n    dispatch({\n        type:CLEAR_ERROR\n    })\n}\nexport const clearSuccess=()=>dispatch=>{\n    dispatch({\n        type:CLEAR_SUCCESS\n    })\n}\nexport const deleteContact=(id)=>dispatch=>{\ndispatch({\n    type:DELETE_CONTACT,\n    payload:id,\n})\n}\n\nexport const _validateDetail=(arr,details)=>{\n         for(let i=0;i<arr.length;i++){\n             if(!details[arr[i]]){\n                 return arr[i];\n             }\n         }\n         return \"ALLOK\"\n}\n\n\nexport default function contactReducer(state=initialState,{type,payload}){\n    switch(type){\n        case SET_CONTACTS:\n            return{\n                ...state,\n                contacts:payload\n            }\n        case HANDLE_ADD_CONTACT_FORM:\n            return{\n                ...state,\n                addContactYN:payload\n            }  \n        case ADD_CONTACT:\n            let oldContacts=state.contacts;\n            //  console.log(payload)\n             let arr=[\"firstName\",\"lastName\",\"email\",\"phone\"];\n            let data= _validateDetail(arr,payload)\n            console.log(data,\"data\")\n                 if(data==\"ALLOK\"){\n                    let details={\n                        id:oldContacts[oldContacts.length-1].id+1,\n                        first_name:payload.firstName,\n                        last_name:payload.lastName,\n                        email:payload.email,\n                        avatar_url:\"https://robohash.org/quasimagnilaudantium.png?size=100x100&set=set1\",\n                        phone:payload.phone,\n                    } \n                    oldContacts.push(details);\n                    // console.log(oldContacts)\n                   localStorage.setItem(\"contact\", JSON.stringify(oldContacts))\n                   return{\n                       ...state,\n                       contacts:oldContacts,\n                       success:true,\n                   }\n                } \n                   else{\n                       return{\n                           ...state,\n                           error:`${data} is required but missing`\n                       }\n                   }     \n         \n        case DELETE_CONTACT:\n            let newContact=state.contacts.filter((ele)=>{\n                if(ele.id!=payload)\n                {\n                    return ele;\n                }\n            }) \n            localStorage.setItem(\"contact\", JSON.stringify(newContact))\n            return{\n                ...state,\n                contacts:newContact\n            }\n        case CLEAR_ERROR:\n            return{\n                ...state,\n                error:\"\"\n            }    \n        case CLEAR_SUCCESS:\n            return{\n                ...state,\n                success:false\n            }\n        default:\n            return state\n    }\n\n}"]},"metadata":{},"sourceType":"module"}