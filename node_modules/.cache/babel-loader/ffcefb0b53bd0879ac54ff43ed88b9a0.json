{"ast":null,"code":"import _objectSpread from \"/home/aniket/Desktop/New_Projects/contact_list/contact_list/node_modules/@babel/runtime/helpers/esm/objectSpread2\";\nvar _jsxFileName = \"/home/aniket/Desktop/New_Projects/contact_list/contact_list/src/Component/AddContact.js\";\nimport React, { Component } from 'react';\nimport { withStyles } from '@material-ui/core';\nimport CloseIcon from '@material-ui/icons/Close';\nimport IconButton from '@material-ui/core/IconButton';\nimport { handleAddContactForm, addContact, clearError, clearSuccess } from './contactState';\nimport { connect } from 'react-redux';\nconst Auto_clear_interval = 6;\n\nclass AddContact extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      details: {}\n    };\n\n    this.handleCancle = () => {\n      this.props.handleAddContactForm(false);\n    };\n\n    this.handleSave = () => {\n      this.props.addContact(this.state.details);\n\n      if (this.props.store.success) {\n        this.props.handleAddContactForm(false);\n      }\n    };\n\n    this.handleOnchange = e => {\n      //   console.log(e.target.name,e.target.value)\n      this.setState({\n        details: _objectSpread({}, this.state.details, {\n          [e.target.name]: e.target.value\n        })\n      });\n    };\n\n    this.AutoclearError = () => {\n      if (this.props.store.error) {\n        this.props.clearError();\n      }\n    };\n\n    this._Auto_clear_success = () => {\n      if (this.props.store.success) {\n        this.props.clearSuccess();\n        this.props.handleAddContactForm(false);\n      }\n    };\n  }\n\n  componentDidMount() {\n    setInterval(this.AutoclearError, Auto_clear_interval * 1000);\n    setInterval(this._Auto_clear_success, 10);\n  }\n\n  render() {\n    let classes = this.props.classes;\n    console.log(this.props.store.error, \"add\");\n    return React.createElement(\"div\", {\n      className: classes.relative,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: classes.mainContainer,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: classes.formContainer,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: classes.form,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: classes.closeIcon,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54\n      },\n      __self: this\n    }, React.createElement(IconButton, {\n      onClick: this.handleCancle,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55\n      },\n      __self: this\n    }, React.createElement(CloseIcon, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55\n      },\n      __self: this\n    }))), React.createElement(\"div\", {\n      className: classes.content,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      className: classes.font,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58\n      },\n      __self: this\n    }, \"Name\", React.createElement(\"span\", {\n      className: classes.fontColor,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58\n      },\n      __self: this\n    }, \"*\")), React.createElement(\"input\", {\n      type: \"text\",\n      className: `form-control`,\n      name: \"firstName\",\n      placeholder: \"Name\",\n      onChange: this.handleOnchange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      className: classes.content,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      className: classes.font,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66\n      },\n      __self: this\n    }, \"Last Name \", React.createElement(\"span\", {\n      className: classes.fontColor,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66\n      },\n      __self: this\n    }, \"*\")), React.createElement(\"input\", {\n      type: \"text\",\n      className: `form-control`,\n      name: \"lastName\",\n      placeholder: \"Last Name\",\n      onChange: this.handleOnchange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      className: classes.content,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      className: classes.font,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74\n      },\n      __self: this\n    }, \"Email\", React.createElement(\"span\", {\n      className: classes.fontColor,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74\n      },\n      __self: this\n    }, \"*\")), React.createElement(\"input\", {\n      type: \"text\",\n      className: `form-control`,\n      placeholder: \"Email\",\n      name: \"email\",\n      onChange: this.handleOnchange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      className: classes.content,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      className: classes.font,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82\n      },\n      __self: this\n    }, \"Phone \", React.createElement(\"span\", {\n      className: classes.fontColor,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82\n      },\n      __self: this\n    }, \"*\")), React.createElement(\"input\", {\n      type: \"text\",\n      className: `form-control`,\n      placeholder: \"Phone\",\n      name: \"phone\",\n      onChange: this.handleOnchange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      className: classes.buttonContainer,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 89\n      },\n      __self: this\n    }, this.props.store.error && React.createElement(\"p\", {\n      className: classes.fontColor,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 90\n      },\n      __self: this\n    }, this.props.store.error, \" \"), React.createElement(\"button\", {\n      type: \"button\",\n      className: \"btn btn-primary\",\n      onClick: this.handleSave,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 91\n      },\n      __self: this\n    }, \"Save\"))))));\n  }\n\n}\n\nconst styles = theme => ({\n  relative: {\n    position: \"relative\"\n  },\n  mainContainer: {\n    position: \"absolute\",\n    borderWidth: \"19px\",\n    content: \" \",\n    borderStyle: \"solid\",\n    borderColor: '#39ac73 transparent transparent transparent',\n    left: \"33px\",\n    width: \"20px\"\n  },\n  formContainer: {\n    position: \"absolute\",\n    left: \"-150px\",\n    zIndex: \"999\"\n  },\n  form: {\n    paddingTop: \"20px\",\n    width: \"300px\",\n    height: \"450px\",\n    // background:\"#39ac73\",\n    background: \"#3c9681\",\n    borderRadius: \"30px\"\n  },\n  closeIcon: {\n    position: \"absolute\",\n    top: \"0px\",\n    right: \"5px\"\n  },\n  content: {\n    display: \"flex\",\n    flexFlow: \"column\",\n    padding: \"0px 15px 15px 15px\"\n  },\n  font: {\n    fontWeight: \"bold\"\n  },\n  fontColor: {\n    color: \"red\"\n  },\n  buttonContainer: {\n    textAlign: \"center\"\n  }\n});\n\nconst mapStateToProps = state => {\n  return {\n    store: state.contacts\n  };\n};\n\nconst mapDispatchToProps = {\n  handleAddContactForm,\n  addContact,\n  clearError,\n  clearSuccess\n};\nexport default withStyles(styles)(connect(mapStateToProps, mapDispatchToProps)(AddContact));","map":{"version":3,"sources":["/home/aniket/Desktop/New_Projects/contact_list/contact_list/src/Component/AddContact.js"],"names":["React","Component","withStyles","CloseIcon","IconButton","handleAddContactForm","addContact","clearError","clearSuccess","connect","Auto_clear_interval","AddContact","state","details","handleCancle","props","handleSave","store","success","handleOnchange","e","setState","target","name","value","AutoclearError","error","_Auto_clear_success","componentDidMount","setInterval","render","classes","console","log","relative","mainContainer","formContainer","form","closeIcon","content","font","fontColor","buttonContainer","styles","theme","position","borderWidth","borderStyle","borderColor","left","width","zIndex","paddingTop","height","background","borderRadius","top","right","display","flexFlow","padding","fontWeight","color","textAlign","mapStateToProps","contacts","mapDispatchToProps"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport {withStyles} from '@material-ui/core';\nimport CloseIcon from '@material-ui/icons/Close';\nimport IconButton from '@material-ui/core/IconButton';\nimport { handleAddContactForm, addContact, clearError, clearSuccess } from './contactState';\nimport { connect } from 'react-redux';\nconst Auto_clear_interval=6;\nclass AddContact extends Component {\n    state = { \n        details:{},\n     }\n\n    handleCancle=()=>{\n        this.props.handleAddContactForm(false)\n    }\n  handleSave=()=>{\n    this.props.addContact(this.state.details)\n    if(this.props.store.success){\n        this.props.handleAddContactForm(false)\n    }\n  }\n  handleOnchange=(e)=>{\n    //   console.log(e.target.name,e.target.value)\n      this.setState({\n          details:{...this.state.details,[e.target.name]:e.target.value}\n      })\n  }\n  AutoclearError=()=>{\n      if(this.props.store.error){\n         this.props.clearError()\n      }\n  }\n  _Auto_clear_success=()=>{\n   if(this.props.store.success)\n   {\n       this.props.clearSuccess()\n       this.props.handleAddContactForm(false)\n\n   }\n  }\ncomponentDidMount(){\n    setInterval( this.AutoclearError, (Auto_clear_interval*1000));\n    setInterval(this._Auto_clear_success,(10))\n}\n\n    render() { \n        let classes=this.props.classes;\n        console.log(this.props.store.error,\"add\")\n        return ( \n                  <div className={classes.relative}>\n                  <div className={classes.mainContainer}>\n                  <div className={classes.formContainer}>\n                 <div className={classes.form}>\n                     <div className={classes.closeIcon}>\n                         <IconButton onClick={this.handleCancle}><CloseIcon/></IconButton>\n                     </div>\n                   <div className={classes.content}>  \n                      <label className={classes.font}>Name<span className={classes.fontColor}>*</span></label>  \n                      <input type=\"text\" \n                      className={`form-control`} \n                      name=\"firstName\"\n                      placeholder=\"Name\" \n                      onChange={this.handleOnchange}/>\n                   </div>\n                   <div className={classes.content}>\n                   <label className={classes.font}>Last Name <span className={classes.fontColor}>*</span></label>\n                   <input type=\"text\" \n                   className={`form-control`} \n                   name=\"lastName\"\n                   placeholder=\"Last Name\" \n                   onChange={this.handleOnchange}/>\n                   </div>\n                   <div className={classes.content}>\n                    <label className={classes.font}>Email<span className={classes.fontColor}>*</span></label>\n                   <input type=\"text\" \n                   className={`form-control`} \n                   placeholder=\"Email\" \n                   name=\"email\"\n                   onChange={this.handleOnchange}/>\n                   </div>\n                   <div className={classes.content}>\n                    <label className={classes.font}>Phone <span className={classes.fontColor}>*</span></label>\n                   <input type=\"text\" \n                   className={`form-control`} \n                   placeholder=\"Phone\" \n                   name=\"phone\"\n                   onChange={this.handleOnchange}/>\n                   </div>\n                   <div className={classes.buttonContainer}>\n                       { this.props.store.error && <p className={classes.fontColor}>{this.props.store.error} </p>}\n                       <button type=\"button\" className=\"btn btn-primary\" onClick={this.handleSave}>Save</button>\n                   </div>\n                   </div>\n                  </div>\n                </div> \n                </div>);\n    }\n}\nconst styles=theme=>({\n    relative:{\n        position:\"relative\"\n    },\n    mainContainer:{\n    position:\"absolute\",\n    borderWidth:\"19px\",\n    content: \" \",\n    borderStyle:\"solid\",\n    borderColor:'#39ac73 transparent transparent transparent',\n    left:\"33px\",\n    width:\"20px\"\n    },\n    formContainer:{\n       position:\"absolute\",\n       left:\"-150px\",\n       zIndex:\"999\"\n    },\n    form:{\n        paddingTop:\"20px\",\n        width:\"300px\",\n        height:\"450px\",\n        // background:\"#39ac73\",\n        background:\"#3c9681\",\n        borderRadius:\"30px\",\n    },\n    closeIcon:{\n        position:\"absolute\",\n        top:\"0px\",\n        right:\"5px\",\n    },\n    content:{\n     display:\"flex\",\n     flexFlow:\"column\",\n     padding:\"0px 15px 15px 15px\"\n    },\n    font:{\n        fontWeight:\"bold\"\n    },\n    fontColor:{\n        color:\"red\"\n    },\n    buttonContainer:{\n        textAlign:\"center\"\n    },\n})\nconst mapStateToProps=(state)=>{\n    return {\n        store:state.contacts\n    }\n}\nconst mapDispatchToProps={\n    handleAddContactForm,\n    addContact,\n    clearError,\n    clearSuccess,\n\n}\n\nexport default withStyles(styles)(connect(mapStateToProps,mapDispatchToProps)(AddContact));"]},"metadata":{},"sourceType":"module"}