{"ast":null,"code":"var _jsxFileName = \"/home/aniket/Desktop/New_Projects/contact_list/contact_list/src/Component/contacts.js\";\nimport React, { Component } from 'react';\nimport contacts from \"../contact_list.json\";\nimport { connect } from \"react-redux\";\nimport { setContacts } from './contactState.js';\nimport { withStyle } from '@babel/traverse';\n\nclass Contacts extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {};\n  }\n\n  componentDidMount() {\n    this.props.setContacts(contacts);\n  }\n\n  render() {\n    let classes = this.props.classes;\n    let contacts = this.props.contacts.contacts; // console.log(contacts) \n\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 16\n      },\n      __self: this\n    }, React.createElement(\"table\", {\n      className: `table table-striped`,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 17\n      },\n      __self: this\n    }, React.createElement(\"tr\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 18\n      },\n      __self: this\n    }, React.createElement(\"th\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 19\n      },\n      __self: this\n    }, \"Id\"), React.createElement(\"th\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 20\n      },\n      __self: this\n    }, \"Avatar\"), React.createElement(\"th\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 21\n      },\n      __self: this\n    }, \"Name\"), React.createElement(\"th\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 22\n      },\n      __self: this\n    }, \"Email\"), React.createElement(\"th\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 23\n      },\n      __self: this\n    }, \"Phone No\")), React.createElement(\"tbody\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 25\n      },\n      __self: this\n    }, contacts && contacts.map(contact => {\n      console.log(contact);\n      return React.createElement(\"tr\", {\n        className: classes.tr,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 30\n        },\n        __self: this\n      }, React.createElement(\"td\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 31\n        },\n        __self: this\n      }, contact.id), React.createElement(\"td\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 32\n        },\n        __self: this\n      }, React.createElement(\"img\", {\n        src: contact.avatar_url,\n        alt: \"avatar\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 32\n        },\n        __self: this\n      }), \" \"), React.createElement(\"td\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 33\n        },\n        __self: this\n      }, contact.first_name, React.createElement(\"span\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 33\n        },\n        __self: this\n      }, \" \", contact['last_name'])), React.createElement(\"td\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 34\n        },\n        __self: this\n      }, contact.email), React.createElement(\"td\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 35\n        },\n        __self: this\n      }, contact.phone));\n    }))));\n  }\n\n}\n\nconst styles = them => ({\n  tr: {\n    display: \"flex\"\n  }\n});\n\nconst mapStateToProps = state => {\n  return {\n    contacts: state.contacts\n  };\n};\n\nconst mapDispatchToProps = {\n  setContacts\n};\nexport default withStyle(styles)(connect(mapStateToProps, mapDispatchToProps)(Contacts));","map":{"version":3,"sources":["/home/aniket/Desktop/New_Projects/contact_list/contact_list/src/Component/contacts.js"],"names":["React","Component","contacts","connect","setContacts","withStyle","Contacts","state","componentDidMount","props","render","classes","map","contact","console","log","tr","id","avatar_url","first_name","email","phone","styles","them","display","mapStateToProps","mapDispatchToProps"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,QAAP,MAAqB,sBAArB;AACA,SAAQC,OAAR,QAAsB,aAAtB;AACA,SAASC,WAAT,QAA4B,mBAA5B;AACA,SAAQC,SAAR,QAAwB,iBAAxB;;AACA,MAAMC,QAAN,SAAuBL,SAAvB,CAAiC;AAAA;AAAA;AAAA,SAC7BM,KAD6B,GACrB,EADqB;AAAA;;AAEjCC,EAAAA,iBAAiB,GAAG;AAChB,SAAKC,KAAL,CAAWL,WAAX,CAAuBF,QAAvB;AACH;;AACGQ,EAAAA,MAAM,GAAG;AACL,QAAIC,OAAO,GAAC,KAAKF,KAAL,CAAWE,OAAvB;AACA,QAAIT,QAAQ,GAAC,KAAKO,KAAL,CAAWP,QAAX,CAAoBA,QAAjC,CAFK,CAGL;;AACA,WACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACG;AAAO,MAAA,SAAS,EAAG,qBAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADD,EAEC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAFD,EAGC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAHD,EAIC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eAJD,EAKC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBALD,CADJ,EAQI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAEQA,QAAQ,IAAIA,QAAQ,CAACU,GAAT,CAAcC,OAAD,IAAW;AAChCC,MAAAA,OAAO,CAACC,GAAR,CAAYF,OAAZ;AACA,aACI;AAAI,QAAA,SAAS,EAAEF,OAAO,CAACK,EAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAKH,OAAO,CAACI,EAAb,CADJ,EAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAI;AAAK,QAAA,GAAG,EAAEJ,OAAO,CAACK,UAAlB;AAA8B,QAAA,GAAG,EAAC,QAAlC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAAJ,MAFJ,EAGI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAKL,OAAO,CAACM,UAAb,EAAwB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAAQN,OAAO,CAAC,WAAD,CAAf,CAAxB,CAHJ,EAII;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAKA,OAAO,CAACO,KAAb,CAJJ,EAKI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAKP,OAAO,CAACQ,KAAb,CALJ,CADJ;AASH,KAXW,CAFpB,CARJ,CADH,CADJ;AA8BH;;AAvC4B;;AAyCjC,MAAMC,MAAM,GAACC,IAAI,KAAG;AACpBP,EAAAA,EAAE,EAAC;AACCQ,IAAAA,OAAO,EAAC;AADT;AADiB,CAAH,CAAjB;;AAMA,MAAMC,eAAe,GAAElB,KAAD,IAAS;AAC3B,SAAO;AACDL,IAAAA,QAAQ,EAACK,KAAK,CAACL;AADd,GAAP;AAGH,CAJD;;AAKA,MAAMwB,kBAAkB,GAAC;AACrBtB,EAAAA;AADqB,CAAzB;AAGA,eAAeC,SAAS,CAACiB,MAAD,CAAT,CAAkBnB,OAAO,CAACsB,eAAD,EAAiBC,kBAAjB,CAAP,CAA4CpB,QAA5C,CAAlB,CAAf","sourcesContent":["import React, { Component } from 'react';\nimport contacts from \"../contact_list.json\"\nimport {connect} from \"react-redux\";\nimport { setContacts } from './contactState.js';\nimport {withStyle} from '@babel/traverse'\nclass Contacts extends Component {\n    state = {  }\ncomponentDidMount() {\n    this.props.setContacts(contacts)\n}\n    render() {\n        let classes=this.props.classes\n        let contacts=this.props.contacts.contacts;\n        // console.log(contacts) \n        return ( \n            <div>\n               <table className={`table table-striped`}>\n                   <tr>\n                    <th>Id</th>\n                    <th>Avatar</th>\n                    <th>Name</th>\n                    <th>Email</th>\n                    <th>Phone No</th>\n                   </tr>\n                   <tbody>\n                       {\n                           contacts && contacts.map((contact)=>{\n                               console.log(contact)\n                               return(\n                                   <tr className={classes.tr}>\n                                       <td>{contact.id}</td>\n                                       <td><img src={contact.avatar_url} alt=\"avatar\"/> </td>\n                                       <td>{contact.first_name}<span> {contact['last_name']}</span></td>\n                                       <td>{contact.email}</td>\n                                       <td>{contact.phone}</td>\n                                   </tr>\n                               )\n                           })\n                       }\n                   </tbody>\n               </table>\n            </div>\n\n         );\n    }\n}\nconst styles=them=>({\ntr:{\n    display:\"flex\",\n}\n})\n\nconst mapStateToProps=(state)=>{\n    return {\n          contacts:state.contacts\n    }\n} \nconst mapDispatchToProps={\n    setContacts\n}\nexport default withStyle(styles)(connect(mapStateToProps,mapDispatchToProps)(Contacts));"]},"metadata":{},"sourceType":"module"}