{"ast":null,"code":"import _objectSpread from \"/home/aniket/Desktop/New_Projects/contact_list/contact_list/node_modules/@babel/runtime/helpers/esm/objectSpread2\";\nexport const initialState = {\n  contacts: [],\n  addContactYN: false,\n  error: \"\"\n};\nexport const SET_CONTACTS = \"SET_CONTACTS\";\nexport const HANDLE_ADD_CONTACT_FORM = \"HANDLE_ADD_CONTACT_FORM\";\nexport const ADD_CONTACT = \"ADD_CONTACT\";\nexport const setContacts = contacts => dispatch => {\n  dispatch({\n    type: SET_CONTACTS,\n    payload: contacts\n  });\n};\nexport const handleAddContactForm = showOrHide => dispatch => {\n  dispatch({\n    type: HANDLE_ADD_CONTACT_FORM,\n    payload: showOrHide\n  });\n};\nexport const addContact = contactDetails => dispatch => {\n  if (contactDetails) {\n    dispatch({\n      type: ADD_CONTACT,\n      payload: contactDetails\n    });\n  }\n};\nexport default function contactReducer(state = initialState, {\n  type,\n  payload\n}) {\n  switch (type) {\n    case SET_CONTACTS:\n      return _objectSpread({}, state, {\n        contacts: payload\n      });\n\n    case HANDLE_ADD_CONTACT_FORM:\n      return _objectSpread({}, state, {\n        addContactYN: payload\n      });\n\n    case ADD_CONTACT:\n      let oldContacts = state.contacts;\n      console.log(oldContacts);\n      let arr = [\"firstName,lastName,email,phone\"];\n      arr.forEach(element => {\n        if (!payload[element]) {\n          return _objectSpread({}, state, {\n            error: `${element} is missing`\n          });\n        }\n      });\n      let details = {\n        id: oldContacts.length + 1,\n        first_name: payload.firstName,\n        last_name: payload.lastName,\n        email: payload.email,\n        avatar_url: \"https://robohash.org/quasimagnilaudantium.png?size=100x100&set=set1\",\n        phone: payload.phone\n      };\n      oldContacts.push(details);\n      localStorage.setItem(\"contact\", JSON.stringify(oldContacts));\n      return _objectSpread({}, state, {\n        contacts: oldContacts\n      });\n\n    default:\n      return state;\n  }\n}","map":{"version":3,"sources":["/home/aniket/Desktop/New_Projects/contact_list/contact_list/src/Component/contactState.js"],"names":["initialState","contacts","addContactYN","error","SET_CONTACTS","HANDLE_ADD_CONTACT_FORM","ADD_CONTACT","setContacts","dispatch","type","payload","handleAddContactForm","showOrHide","addContact","contactDetails","contactReducer","state","oldContacts","console","log","arr","forEach","element","details","id","length","first_name","firstName","last_name","lastName","email","avatar_url","phone","push","localStorage","setItem","JSON","stringify"],"mappings":";AAAA,OAAO,MAAMA,YAAY,GAAC;AACrBC,EAAAA,QAAQ,EAAC,EADY;AAErBC,EAAAA,YAAY,EAAC,KAFQ;AAGrBC,EAAAA,KAAK,EAAC;AAHe,CAAnB;AAMP,OAAO,MAAMC,YAAY,GAAC,cAAnB;AACP,OAAO,MAAMC,uBAAuB,GAAC,yBAA9B;AACP,OAAO,MAAMC,WAAW,GAAC,aAAlB;AACP,OAAO,MAAMC,WAAW,GAAEN,QAAD,IAAYO,QAAQ,IAAE;AAC/CA,EAAAA,QAAQ,CAAC;AACLC,IAAAA,IAAI,EAACL,YADA;AAELM,IAAAA,OAAO,EAACT;AAFH,GAAD,CAAR;AAIC,CALM;AAMP,OAAO,MAAMU,oBAAoB,GAAEC,UAAD,IAAcJ,QAAQ,IAAE;AAC1DA,EAAAA,QAAQ,CAAC;AACLC,IAAAA,IAAI,EAACJ,uBADA;AAELK,IAAAA,OAAO,EAACE;AAFH,GAAD,CAAR;AAIC,CALM;AAMP,OAAO,MAAMC,UAAU,GAAEC,cAAD,IAAkBN,QAAQ,IAAE;AAChD,MAAGM,cAAH,EAAkB;AAClBN,IAAAA,QAAQ,CAAC;AACLC,MAAAA,IAAI,EAACH,WADA;AAELI,MAAAA,OAAO,EAACI;AAFH,KAAD,CAAR;AAIH;AACA,CAPM;AASP,eAAe,SAASC,cAAT,CAAwBC,KAAK,GAAChB,YAA9B,EAA2C;AAACS,EAAAA,IAAD;AAAMC,EAAAA;AAAN,CAA3C,EAA0D;AACrE,UAAOD,IAAP;AACI,SAAKL,YAAL;AACI,+BACOY,KADP;AAEIf,QAAAA,QAAQ,EAACS;AAFb;;AAIJ,SAAKL,uBAAL;AACI,+BACOW,KADP;AAEId,QAAAA,YAAY,EAACQ;AAFjB;;AAIJ,SAAKJ,WAAL;AACI,UAAIW,WAAW,GAACD,KAAK,CAACf,QAAtB;AACCiB,MAAAA,OAAO,CAACC,GAAR,CAAYF,WAAZ;AACA,UAAIG,GAAG,GAAC,CAAC,gCAAD,CAAR;AACAA,MAAAA,GAAG,CAACC,OAAJ,CAAYC,OAAO,IAAI;AACpB,YAAG,CAACZ,OAAO,CAACY,OAAD,CAAX,EAAqB;AAClB,mCACON,KADP;AAEIb,YAAAA,KAAK,EAAE,GAAEmB,OAAQ;AAFrB;AAIF;AACJ,OAPA;AASD,UAAIC,OAAO,GAAC;AACRC,QAAAA,EAAE,EAACP,WAAW,CAACQ,MAAZ,GAAmB,CADd;AAERC,QAAAA,UAAU,EAAChB,OAAO,CAACiB,SAFX;AAGRC,QAAAA,SAAS,EAAClB,OAAO,CAACmB,QAHV;AAIRC,QAAAA,KAAK,EAACpB,OAAO,CAACoB,KAJN;AAKRC,QAAAA,UAAU,EAAC,qEALH;AAMRC,QAAAA,KAAK,EAACtB,OAAO,CAACsB;AANN,OAAZ;AAQAf,MAAAA,WAAW,CAACgB,IAAZ,CAAiBV,OAAjB;AACDW,MAAAA,YAAY,CAACC,OAAb,CAAqB,SAArB,EAAgCC,IAAI,CAACC,SAAL,CAAepB,WAAf,CAAhC;AACA,+BACOD,KADP;AAEIf,QAAAA,QAAQ,EAACgB;AAFb;;AAIH;AACI,aAAOD,KAAP;AAvCR;AA0CH","sourcesContent":["export const initialState={\n     contacts:[],\n     addContactYN:false,\n     error:\"\"\n     \n}\nexport const SET_CONTACTS=\"SET_CONTACTS\";\nexport const HANDLE_ADD_CONTACT_FORM=\"HANDLE_ADD_CONTACT_FORM\";\nexport const ADD_CONTACT=\"ADD_CONTACT\";\nexport const setContacts=(contacts)=>dispatch=>{\ndispatch({\n    type:SET_CONTACTS,\n    payload:contacts\n})\n}\nexport const handleAddContactForm=(showOrHide)=>dispatch=>{\ndispatch({\n    type:HANDLE_ADD_CONTACT_FORM,\n    payload:showOrHide\n})\n}\nexport const addContact=(contactDetails)=>dispatch=>{\n    if(contactDetails){\n    dispatch({\n        type:ADD_CONTACT,\n        payload:contactDetails\n    })\n}\n}\n\nexport default function contactReducer(state=initialState,{type,payload}){\n    switch(type){\n        case SET_CONTACTS:\n            return{\n                ...state,\n                contacts:payload\n            }\n        case HANDLE_ADD_CONTACT_FORM:\n            return{\n                ...state,\n                addContactYN:payload\n            }  \n        case ADD_CONTACT:\n            let oldContacts=state.contacts;\n             console.log(oldContacts)\n             let arr=[\"firstName,lastName,email,phone\"];\n             arr.forEach(element => {\n                if(!payload[element]){\n                   return{\n                       ...state,\n                       error:`${element} is missing`\n                   }\n                }\n            });\n            \n            let details={\n                id:oldContacts.length+1,\n                first_name:payload.firstName,\n                last_name:payload.lastName,\n                email:payload.email,\n                avatar_url:\"https://robohash.org/quasimagnilaudantium.png?size=100x100&set=set1\",\n                phone:payload.phone,\n            } \n            oldContacts.push(details);\n           localStorage.setItem(\"contact\", JSON.stringify(oldContacts)) \n           return{\n               ...state,\n               contacts:oldContacts\n           }       \n        default:\n            return state\n    }\n\n}"]},"metadata":{},"sourceType":"module"}